안녕하세요. Tempy 템플릿입니다.

좀 더 쉬운 템플릿을 만들고자 한번 해보았습니다. -_-

# 주석

간단히 주석부터 설명드리자면, 다음과 같이 사용할 수 있습니다.
{{ -- 저는 주석이에요. }}


{{	
	-- 안녕하세요. 이 부분은 주석 처리됩니다.
	-- = "코드를 이렇게 주석처리 가능합니다"

	-- 이녀석은 foo를 출력하는 소스입니다.
	
	= foo
	= "\n"

	-- 그냥 string을 출력할 때는 이렇게 하면 됩니다.
	= "하하하핫\n"
}}

#조건문

조건문의 경우 다음과 같이 사용할 수 있습니다.

{{
	? true
		= "이프문입니다, 이게 출력됩니다.\n"
	:? true -- 여기서는 false를 해야하지만, 둘다 true일 경우 위에 것을 출력한다는 것을 보여주기 위해 작성해 보았습니다.
		= "출력x"
	:
		= "출력x"
	/

	? false
		= "출력x"
	:? true
		= "엘스이프입니다, 이게 출력됩니다.\n"
	:
		= "출력x"
	/

	? false
		= "출력x"
	:? false
		= "출력x"
	:
		= "엘스입니다, 이게 출력됩니다.\n"
	/
}}

어떻습니까? 너무나 쉽습니다. 꼭 위와같이 명령어처럼 사용해야하냐구요? 다음과 같이 사용하여도 같은 결과를 출력합니다. :)

{{?true;="이프문입니다, 이게 출력됩니다.\n";:?true;= "출력x.";:;="출력x.";/;?false;="출력x";:?true;="엘스이프입니다, 이게 출력됩니다.\n";:;="출력x";/;?false;="출력x";:?false;="출력x";:;="엘스입니다, 이게 출력됩니다.\n";/}}


이제 이해가 될것 같습니다. Tempy는 각 연산의 종료를 다음 줄로 넘기면 되지만, 한줄로 사용하여야 할 경우에는 모든 구문 마지막에 ;을 통해 구분을 합니다. 물론 위와같이 변태처럼 사용하는 경우는 드물겠지만요. :)

마찬가지로 조건문 안에 조건문, 즉 내부 조건문도 사용이 가능합니다.

{{
	? true
		? false
			= "출력x"
		:? true
			= "내부 조건문입니다.\n"
		:
			= "출력x"
		/
	:? true
		= "출력x."
	:
		= "출력x."
	/
}}

#반복문

다음 예제는 반복문에 관한 예제입니다. 반복문은 이터레이터 형태로만 사용할 수 있습니다.

{{
	@ bar -> item
		= item
		= "\n"
	/
}}

역시 너무나 쉽습니다. 마찬가지로 inline을 형태로 더 깔끔하게 사용하려면 어떻게 해야할까요?

{{@bar->item}}{{=item}}
{{/}}

더 간략하게 사용하려면,

{{@bar->item;=item;="\n";/}}

그렇다면 이중 반복문도 사용가능할까요? 물론입니다. Tempy에서는 불가능은 없습니다.

{{
	@ baz -> items
		@ items -> item
			= item
			= "\n"
		/
		= "\n"
	/
}}

마찬가지로 단순화 시켜도 작동하는지 보겠습니다.

{{@baz->items;@items->item;=item;="\n";/;="\n";/}}

조건문과 함께 사용해보도록 하겠습니다.

{{
	? true
		@ bar -> item
			= "조건문과 함께, "
			= item
			= "\n"
		/
	:? true
		= "출력x"
	:
		= "출력x"
	/
}}

반대의 경우도,

{{
	@ qux -> item
		? item
			= "True이면..\n"
		:
			= "False이면..\n"
		/
	/
}}





어떻습니까? :) Tempy 참 매력적이죠?
